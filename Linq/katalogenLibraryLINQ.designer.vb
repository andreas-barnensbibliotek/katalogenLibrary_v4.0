'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AJDNNDatabase_v5")>  _
Partial Public Class katalogenLibraryLINQDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblAjKatalogBook(instance As tblAjKatalogBook)
    End Sub
  Partial Private Sub UpdatetblAjKatalogBook(instance As tblAjKatalogBook)
    End Sub
  Partial Private Sub DeletetblAjKatalogBook(instance As tblAjKatalogBook)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.katalogenLibrary_v4_0.My.MySettings.Default.AJDNNDatabase_v5ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblAjKatalogBooks() As System.Data.Linq.Table(Of tblAjKatalogBook)
		Get
			Return Me.GetTable(Of tblAjKatalogBook)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAjKatalogBooks")>  _
Partial Public Class tblAjKatalogBook
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _bookID As Integer
	
	Private _ModuleID As System.Nullable(Of Integer)
	
	Private _Version As System.Nullable(Of Long)
	
	Private _isbn As String
	
	Private _UserID As System.Nullable(Of Integer)
	
	Private _PublisherID As System.Nullable(Of Integer)
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _Changed As System.Nullable(Of Date)
	
	Private _Deleted As System.Nullable(Of Date)
	
	Private _Title As String
	
	Private _Subtitle As String
	
	Private _Serie As String
	
	Private _Serienr As String
	
	Private _Pages As System.Nullable(Of Integer)
	
	Private _Price As String
	
	Private _Language As String
	
	Private _Information As String
	
	Private _Synopsis As String
	
	Private _Published As String
	
	Private _presentation As String
	
	Private _presentationlink As String
	
	Private _ebooklink As String
	
	Private _newcopy As System.Nullable(Of Integer)
	
	Private _inserter As String
	
	Private _Lektor As System.Nullable(Of Integer)
	
	Private _TotVotes As System.Nullable(Of Integer)
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _Bokjuryn As System.Nullable(Of Integer)
	
	Private _Easyread As System.Nullable(Of Integer)
	
	Private _SSMA_TimeStamp As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnbookIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnbookIDChanged()
    End Sub
    Partial Private Sub OnModuleIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnModuleIDChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnisbnChanging(value As String)
    End Sub
    Partial Private Sub OnisbnChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnPublisherIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublisherIDChanged()
    End Sub
    Partial Private Sub OnInsertedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInsertedChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnSubtitleChanging(value As String)
    End Sub
    Partial Private Sub OnSubtitleChanged()
    End Sub
    Partial Private Sub OnSerieChanging(value As String)
    End Sub
    Partial Private Sub OnSerieChanged()
    End Sub
    Partial Private Sub OnSerienrChanging(value As String)
    End Sub
    Partial Private Sub OnSerienrChanged()
    End Sub
    Partial Private Sub OnPagesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPagesChanged()
    End Sub
    Partial Private Sub OnPriceChanging(value As String)
    End Sub
    Partial Private Sub OnPriceChanged()
    End Sub
    Partial Private Sub OnLanguageChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageChanged()
    End Sub
    Partial Private Sub OnInformationChanging(value As String)
    End Sub
    Partial Private Sub OnInformationChanged()
    End Sub
    Partial Private Sub OnSynopsisChanging(value As String)
    End Sub
    Partial Private Sub OnSynopsisChanged()
    End Sub
    Partial Private Sub OnPublishedChanging(value As String)
    End Sub
    Partial Private Sub OnPublishedChanged()
    End Sub
    Partial Private Sub OnpresentationChanging(value As String)
    End Sub
    Partial Private Sub OnpresentationChanged()
    End Sub
    Partial Private Sub OnpresentationlinkChanging(value As String)
    End Sub
    Partial Private Sub OnpresentationlinkChanged()
    End Sub
    Partial Private Sub OnebooklinkChanging(value As String)
    End Sub
    Partial Private Sub OnebooklinkChanged()
    End Sub
    Partial Private Sub OnnewcopyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnnewcopyChanged()
    End Sub
    Partial Private Sub OninserterChanging(value As String)
    End Sub
    Partial Private Sub OninserterChanged()
    End Sub
    Partial Private Sub OnLektorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLektorChanged()
    End Sub
    Partial Private Sub OnTotVotesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTotVotesChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnBokjurynChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBokjurynChanged()
    End Sub
    Partial Private Sub OnEasyreadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEasyreadChanged()
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bookID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property bookID() As Integer
		Get
			Return Me._bookID
		End Get
		Set
			If ((Me._bookID = value)  _
						= false) Then
				Me.OnbookIDChanging(value)
				Me.SendPropertyChanging
				Me._bookID = value
				Me.SendPropertyChanged("bookID")
				Me.OnbookIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleID", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ModuleID() As System.Nullable(Of Integer)
		Get
			Return Me._ModuleID
		End Get
		Set
			If (Me._ModuleID.Equals(value) = false) Then
				Me.OnModuleIDChanging(value)
				Me.SendPropertyChanging
				Me._ModuleID = value
				Me.SendPropertyChanged("ModuleID")
				Me.OnModuleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Version() As System.Nullable(Of Long)
		Get
			Return Me._Version
		End Get
		Set
			If (Me._Version.Equals(value) = false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isbn", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isbn() As String
		Get
			Return Me._isbn
		End Get
		Set
			If (String.Equals(Me._isbn, value) = false) Then
				Me.OnisbnChanging(value)
				Me.SendPropertyChanging
				Me._isbn = value
				Me.SendPropertyChanged("isbn")
				Me.OnisbnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property UserID() As System.Nullable(Of Integer)
		Get
			Return Me._UserID
		End Get
		Set
			If (Me._UserID.Equals(value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublisherID", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PublisherID() As System.Nullable(Of Integer)
		Get
			Return Me._PublisherID
		End Get
		Set
			If (Me._PublisherID.Equals(value) = false) Then
				Me.OnPublisherIDChanging(value)
				Me.SendPropertyChanging
				Me._PublisherID = value
				Me.SendPropertyChanged("PublisherID")
				Me.OnPublisherIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me.OnInsertedChanging(value)
				Me.SendPropertyChanging
				Me._Inserted = value
				Me.SendPropertyChanged("Inserted")
				Me.OnInsertedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Changed() As System.Nullable(Of Date)
		Get
			Return Me._Changed
		End Get
		Set
			If (Me._Changed.Equals(value) = false) Then
				Me.OnChangedChanging(value)
				Me.SendPropertyChanging
				Me._Changed = value
				Me.SendPropertyChanged("Changed")
				Me.OnChangedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Deleted() As System.Nullable(Of Date)
		Get
			Return Me._Deleted
		End Get
		Set
			If (Me._Deleted.Equals(value) = false) Then
				Me.OnDeletedChanging(value)
				Me.SendPropertyChanging
				Me._Deleted = value
				Me.SendPropertyChanged("Deleted")
				Me.OnDeletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subtitle", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Subtitle() As String
		Get
			Return Me._Subtitle
		End Get
		Set
			If (String.Equals(Me._Subtitle, value) = false) Then
				Me.OnSubtitleChanging(value)
				Me.SendPropertyChanging
				Me._Subtitle = value
				Me.SendPropertyChanged("Subtitle")
				Me.OnSubtitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Serie() As String
		Get
			Return Me._Serie
		End Get
		Set
			If (String.Equals(Me._Serie, value) = false) Then
				Me.OnSerieChanging(value)
				Me.SendPropertyChanging
				Me._Serie = value
				Me.SendPropertyChanged("Serie")
				Me.OnSerieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serienr", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Serienr() As String
		Get
			Return Me._Serienr
		End Get
		Set
			If (String.Equals(Me._Serienr, value) = false) Then
				Me.OnSerienrChanging(value)
				Me.SendPropertyChanging
				Me._Serienr = value
				Me.SendPropertyChanged("Serienr")
				Me.OnSerienrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pages", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Pages() As System.Nullable(Of Integer)
		Get
			Return Me._Pages
		End Get
		Set
			If (Me._Pages.Equals(value) = false) Then
				Me.OnPagesChanging(value)
				Me.SendPropertyChanging
				Me._Pages = value
				Me.SendPropertyChanged("Pages")
				Me.OnPagesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Price() As String
		Get
			Return Me._Price
		End Get
		Set
			If (String.Equals(Me._Price, value) = false) Then
				Me.OnPriceChanging(value)
				Me.SendPropertyChanging
				Me._Price = value
				Me.SendPropertyChanged("Price")
				Me.OnPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Language", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Language() As String
		Get
			Return Me._Language
		End Get
		Set
			If (String.Equals(Me._Language, value) = false) Then
				Me.OnLanguageChanging(value)
				Me.SendPropertyChanging
				Me._Language = value
				Me.SendPropertyChanged("Language")
				Me.OnLanguageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Information", DbType:="NVarChar(2000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Information() As String
		Get
			Return Me._Information
		End Get
		Set
			If (String.Equals(Me._Information, value) = false) Then
				Me.OnInformationChanging(value)
				Me.SendPropertyChanging
				Me._Information = value
				Me.SendPropertyChanged("Information")
				Me.OnInformationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Synopsis", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Synopsis() As String
		Get
			Return Me._Synopsis
		End Get
		Set
			If (String.Equals(Me._Synopsis, value) = false) Then
				Me.OnSynopsisChanging(value)
				Me.SendPropertyChanging
				Me._Synopsis = value
				Me.SendPropertyChanged("Synopsis")
				Me.OnSynopsisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Published", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Published() As String
		Get
			Return Me._Published
		End Get
		Set
			If (String.Equals(Me._Published, value) = false) Then
				Me.OnPublishedChanging(value)
				Me.SendPropertyChanging
				Me._Published = value
				Me.SendPropertyChanged("Published")
				Me.OnPublishedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_presentation", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property presentation() As String
		Get
			Return Me._presentation
		End Get
		Set
			If (String.Equals(Me._presentation, value) = false) Then
				Me.OnpresentationChanging(value)
				Me.SendPropertyChanging
				Me._presentation = value
				Me.SendPropertyChanged("presentation")
				Me.OnpresentationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_presentationlink", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property presentationlink() As String
		Get
			Return Me._presentationlink
		End Get
		Set
			If (String.Equals(Me._presentationlink, value) = false) Then
				Me.OnpresentationlinkChanging(value)
				Me.SendPropertyChanging
				Me._presentationlink = value
				Me.SendPropertyChanged("presentationlink")
				Me.OnpresentationlinkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebooklink", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ebooklink() As String
		Get
			Return Me._ebooklink
		End Get
		Set
			If (String.Equals(Me._ebooklink, value) = false) Then
				Me.OnebooklinkChanging(value)
				Me.SendPropertyChanging
				Me._ebooklink = value
				Me.SendPropertyChanged("ebooklink")
				Me.OnebooklinkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_newcopy", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property newcopy() As System.Nullable(Of Integer)
		Get
			Return Me._newcopy
		End Get
		Set
			If (Me._newcopy.Equals(value) = false) Then
				Me.OnnewcopyChanging(value)
				Me.SendPropertyChanging
				Me._newcopy = value
				Me.SendPropertyChanged("newcopy")
				Me.OnnewcopyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inserter", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property inserter() As String
		Get
			Return Me._inserter
		End Get
		Set
			If (String.Equals(Me._inserter, value) = false) Then
				Me.OninserterChanging(value)
				Me.SendPropertyChanging
				Me._inserter = value
				Me.SendPropertyChanged("inserter")
				Me.OninserterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lektor", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Lektor() As System.Nullable(Of Integer)
		Get
			Return Me._Lektor
		End Get
		Set
			If (Me._Lektor.Equals(value) = false) Then
				Me.OnLektorChanging(value)
				Me.SendPropertyChanging
				Me._Lektor = value
				Me.SendPropertyChanged("Lektor")
				Me.OnLektorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotVotes", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TotVotes() As System.Nullable(Of Integer)
		Get
			Return Me._TotVotes
		End Get
		Set
			If (Me._TotVotes.Equals(value) = false) Then
				Me.OnTotVotesChanging(value)
				Me.SendPropertyChanging
				Me._TotVotes = value
				Me.SendPropertyChanged("TotVotes")
				Me.OnTotVotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bokjuryn", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Bokjuryn() As System.Nullable(Of Integer)
		Get
			Return Me._Bokjuryn
		End Get
		Set
			If (Me._Bokjuryn.Equals(value) = false) Then
				Me.OnBokjurynChanging(value)
				Me.SendPropertyChanging
				Me._Bokjuryn = value
				Me.SendPropertyChanged("Bokjuryn")
				Me.OnBokjurynChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Easyread", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Easyread() As System.Nullable(Of Integer)
		Get
			Return Me._Easyread
		End Get
		Set
			If (Me._Easyread.Equals(value) = false) Then
				Me.OnEasyreadChanging(value)
				Me.SendPropertyChanging
				Me._Easyread = value
				Me.SendPropertyChanged("Easyread")
				Me.OnEasyreadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSMA_TimeStamp", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SSMA_TimeStamp() As System.Data.Linq.Binary
		Get
			Return Me._SSMA_TimeStamp
		End Get
		Set
			If (Object.Equals(Me._SSMA_TimeStamp, value) = false) Then
				Me.OnSSMA_TimeStampChanging(value)
				Me.SendPropertyChanging
				Me._SSMA_TimeStamp = value
				Me.SendPropertyChanged("SSMA_TimeStamp")
				Me.OnSSMA_TimeStampChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
